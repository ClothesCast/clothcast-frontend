name: CI/CD for ClothesCast Frontend

on:
  push:
    branches:
      - dev  #  dev 브랜치에 push될 때 실행

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build

  docker:
    name: Build & Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  #  Buildx 활성화

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64  # 멀티 플랫폼 빌드 지원
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/clothcast-frontend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/clothcast-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/clothcast-frontend:dev

  deploy:
    name: Deploy to Dev Server
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: SSH and Deploy to Dev Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}  # 개발 서버용 SSH 정보
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping existing container..."
            docker stop clothcast-frontend || true
            docker rm clothcast-frontend || true

            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/clothcast-frontend:latest

            echo "Running new container on port 3000..."
            docker run -d --name clothcast-frontend -p 3000:3000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/clothcast-frontend:latest
